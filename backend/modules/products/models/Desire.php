<?php

namespace backend\modules\products\models;

use backend\modules\products\models\ObjectTypes;
use common\models\WbpActiveRecord;
use yii\helpers\Url;
use backend\modules\categories\models\Category;
use common\models\User;
use backend\modules\products\models\ProductsParametrs;
use yii;


class Desire extends WbpActiveRecord
{
    public $cat_fore_rarams;
    public static $seoKey = 'desire';
    public static $imageTypes = ['desire'];

    public static function tableName()
    {
        return '{{%desire}}';
    }

    public function rules()
    {
        return [
            [[
                'user_id',
                'product_id',

            ], 'safe'],
        ];
    }


    public function attributeLabels()
    {
        return [
            'title' => \Yii::t('admin', 'title'),
            'title_ru' => \Yii::t('admin', 'title'),
        ];
    }

//    public function addStatistic(){
//        $session_id=Yii::$app->session->getId();
//        $advert_id=$this->id;
//
//        $view=Views::find()->where([
//            'session_id'=>$session_id,
//            'advert_id'=>$advert_id
//        ])->andWhere(['>=','created_at',time()-24*3600]);
//
//        if(!$view->count()){
//            $view=new Views();
//            $view->session_id=$session_id;
//            $view->advert_id=$advert_id;
//            $view->save();
//        }
//    }

    public function getCategory()
    {
        return $this->hasOne(Category::className(), ['id' => 'category_id']);
    }


    public function getUrl($absolute = false)
    {
        return Url::to(['product/'.$this->href], $absolute);
    }

    public function hasChildren()
    {
        return $this->getChildren()->count();
    }

    public function getChildren()
    {
        return self::find()->where(['status' => 1, 'parent' => $this->id])->orderBy(['sort' => SORT_ASC]);
    }
    public function getUser()
    {
        return $this->hasOne(User::className(), ['id' => 'user_id']);
    }

    public function getParams(){

        $params = ProductsParametrs::find()->where(['product_id'=>$this->id])->all();
$arrayPar = [];

        foreach($params as $key =>$value){
            $arrayPar[$value["parametr_id"]] = $value["value"];
        }
        return $arrayPar;
    }
    public function afterSave($insert, $changedAttributes)
    {

        return parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
    }
    public static function AddToWishlist(){
        $session = Yii::$app->session;
        if(!$session->isActive){$session->open();}
        $product_wishes = $session->get('wishlist');
        if(!empty($product_wishes)){
            if(Yii::$app->user->id){
                foreach($product_wishes as $key=>$value){
                    $product = Desire::find()
                        ->where([
                            "product_id" => $value,
                            "user_id"=> Yii::$app->user->id])
                        ->one();
                    if(empty($product)){
                        $prod = new Desire();
                        $prod->user_id = Yii::$app->user->id;
                        $prod->product_id = $value;
                        if($prod->save()){
                        }
                    }
                }
                return true;
            }

        }

    }
}